@using CodeDrivers.Models.Car
@using CodeDrivers.Models
@model IEnumerable<CodeDrivers.Models.Car.Car>
@{
    ViewData["Title"] = "Cars";
}
<h1 style="text-align:center;">Baza pojazdów</h1>
<p class="car-add-button">
    <a asp-action="Create">Dodaj nowy pojazd</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                <label>Id:</label>
                <br />
                <select id="idFilter" onchange="filterTable('idFilter', 0)">
                    <option value="">Wszystko</option>
                    @foreach (var id in Model.Select(c => c.Id).Distinct())
                    {
                        <option>@id</option>
                    }
                </select>
            </th>
            <th>
                <label>Marka:</label>
                <br />
                <select id="brandFilter" onchange="filterTable('brandFilter', 1)">
                    <option value="">Wszystko</option>
                    @foreach (var brand in Model.Select(c => c.Brand).Distinct())
                    {
                        <option>@brand</option>
                    }
                </select>
            </th>
            <th>
                <label>Model:</label>
                <br />
                <select id="modelFilter" onchange="filterTable('modelFilter', 2)">
                    <option value="">Wszystko</option>
                    @foreach (var modelCar in Model.SelectMany(c => c.Models).Distinct())
                    {
                        <option>@modelCar</option>
                    }
                </select>
            </th>
            <th>
                <label>Segment:</label>
                <br />
                <select id="segmentFilter" onchange="filterTable('segmentFilter', 3)">
                    <option value="">Wszystko</option>
                    @foreach (var segment in Model.Select(c => c.Segment).Distinct())
                    {
                        <option>@segment</option>
                    }
                </select>
            </th>
            <th>
                <label>Rodzaj napędu:</label>
                <br />
                <select id="motorFilter" onchange="filterTable('motorFilter', 4)">
                    <option value="">Wszystko</option>
                    @foreach (var motor in Model.Select(c => c.Motor).Distinct())
                    {
                        <option>@motor</option>
                    }
                </select>
            </th>
            <th>
                <label>Skrzynia biegów:</label>
                <br />
                <select id="gearTransmissionFilter" onchange="filterTable('gearTransmissionFilter', 5)">
                    <option value="">Wszystko</option>
                    @foreach (var gearTransmission in Model.Select(c => c.GearTransmission).Distinct())
                    {
                        <option>@gearTransmission</option>
                    }
                </select>
            </th>
            <th>
                <label>Dostępność:</label>
                <br />
                <select id="availabilityFilter" onchange="filterTable('availabilityFilter', 6)">
                    <option value="">Wszystko</option>
                    <option>Dostępny</option>
                    <option>Niedostępny</option>
                </select>
            </th>
            <th>
                <label>Stawka za dzień:</label>
                <br />
                <select id="pricePerDayFilter" onchange="filterTable('pricePerDayFilter', 7)">
                    <option value="">Wszystko</option>
                    @foreach (var pricePerDay in Model.Select(c => c.PricePerDay).Distinct())
                    {
                        <option>@pricePerDay</option>
                    }
                </select>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Brand)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Model)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Segment)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Motor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GearTransmission)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsAvailable)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.PricePerDay)
                </td>
                <td>
                    @Html.ActionLink("Edytuj", "Edit", new { id = item.Id }, new { @class = "btn btn-edit" }) 
                    @Html.ActionLink("Szczegóły", "Details", new { id = item.Id }, new { @class = "btn btn-details" }) 
                    @Html.ActionLink("Usuń", "Delete", new { id = item.Id }, new { @class = "btn btn-delete" })
                </td>
            </tr>
        }
    </tbody>
</table>
<style>
    .car-add-button a {
        margin-left: 1rem;
        margin-bottom: 0.5rem;
        border: 1px solid #ccc;
        background-color: #f9f9f9;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
        border-radius: 0.5rem;
        width: 15rem;
        height: 2.5rem;
        font-size: 1rem;
        text-align: center;
        font-weight: bold;
        background-color: #54e86f;
        color: white;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-left: 41%;
    }

        .car-add-button a:hover {
            color: black;
            background-color: white;
            border-color: #54e86f;
        }

    .table select {
        width: 110px;
    }

    .btn {
        display: inline-block;
        padding: 6px 12px;
        margin-bottom: 0;
        font-size: 14px;
        font-weight: normal;
        line-height: 1.42857143;
        text-align: center;
        white-space: nowrap;
        vertical-align: middle;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
        border: 1px solid transparent;
        border-radius: 4px;
        text-decoration: none;
    }

    .btn-edit {
        color: #fff;
        background-color: #5cb85c;
        border-color: #4cae4c;
    }

    .btn-details {
        color: #fff;
        background-color: #5bc0de;
        border-color: #46b8da;
    }

    .btn-delete {
        color: #fff;
        background-color: #d9534f;
        border-color: #d43f3a;
    }

</style>

<script>
    function filterTable(filterId, columnIndex) {
        var selectedValue = document.getElementById(filterId).value;
        var table = document.querySelector('.table tbody');
        var rows = table.getElementsByTagName('tr');
        for (var i = 0; i < rows.length; i++) {
            var cells = rows[i].getElementsByTagName('td');
            var cellValue = cells[columnIndex].innerText || cells[columnIndex].textContent;
            if (selectedValue === "" || cellValue === selectedValue) {
                rows[i].style.display = "";
            } else {
                rows[i].style.display = "none";
            }
        }
    }
</script>